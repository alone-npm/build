#!/usr/bin/env node --no-warnings --no-deprecation
import t from"@rollup/plugin-typescript";import i from"@rollup/plugin-node-resolve";import e from"@rollup/plugin-commonjs";import s from"@rollup/plugin-terser";import n from"path";import o from"fs";function r(t,i,e=!1,s=t){const c={};if(!o.existsSync(t))return c;const p="string"==typeof i?i.split(","):i||[];return o.readdirSync(t).forEach(l=>{const u=n.join(t,l),a=o.statSync(u);if(a.isDirectory()){const t=r(u,i,e,s);Object.assign(c,t)}else if(a.isFile()){const t=n.extname(l).slice(1),i=0===p.length||p.includes(t);if(e?!i:i){const t=n.relative(s,u);c[t]=u}}}),c}!function(){const c=t=>{const i=n.dirname(t),e=n.basename(t).replace(/\.[^/.]+$/,"");return n.join(i,e)};((p="alone.build.js")=>({name:process.argv[2],config:{input:"src",format:["js","ts"],output:"dist",main:"index",files:["README.md"],dist:{es:"es",cjs:"cjs",umd:"",types:"types"},package:!0},param:{input:"",output:"",main:""},aloneConfig(){const t=n.resolve(process.cwd(),p);if(!o.existsSync(t)){const i='import {builtinModules} from "module";\n\n//判断生成的文件是否是外部依赖,file=文件名,types: "es" | "cjs" | "umd"\nexport const external = (id, file, type) => {\n    if (id.endsWith(file)) return false;\n    if (type === "umd") return false;\n    if (id.startsWith("./") || id.startsWith("../")) return true;\n    if (builtinModules.includes(id)) return true;\n    return /node_modules/.test(id);\n}\n\nexport default {\n    //开发目录\n    input: "src",\n    //开发格式\n    format: ["js", "ts"],\n    //打包目录\n    output: "dist",\n    //默认使用文件名 如 import nameDemo from "name-demo"; 会默认使用什么js\n    main: "index",\n    //上传到npm的目录和文件,默认添加打包目录\n    files: ["README.md", "tsconfig.json","package.json", "dist"],\n    //打包目录设置,为空不打包\n    dist: {es: "es", cjs: "cjs", umd: "", types: "types"},\n    //是否更新package.json\n    package: true\n}';o.writeFileSync(t,i)}return this},async dealConfig(){const t=n.resolve(process.cwd(),p);if(o.existsSync(t)){const i=await import(t)||{};i.default&&"object"==typeof i.default&&Object.assign(this.config,i.default)}return this.param.input=n.resolve(process.cwd(),this.config.input),this.param.output=n.resolve(process.cwd(),this.config.output),this.param.main=n.resolve(this.param.input,this.config.main+".js"),this.config.files=this.config.files||[],this.config.files.includes(this.config.output)||this.config.files.push(this.config.output),this},mainFile(){if(!o.existsSync(this.param.main)){const t=`export default ${JSON.stringify(this.config,null,2)}`;o.writeFileSync(this.param.main,t)}return this},npmIgnore(t=""){return t=`*\n${this.config.files.length>0?"!":""}${this.config.files.join("\n!")}\n${t}`,o.writeFileSync(n.resolve(process.cwd(),".npmignore"),t),this},gitIgnore(t=""){const i=n.resolve(process.cwd(),".gitignore");return t=`.idea\n.vscode\n.DS_Store\nnode_modules\npnpm-lock.yaml\npackage-lock.json\nyarn.lock\nbun.lockb\n${t}`,o.writeFileSync(i,t),this},async rollupConfig(){const o=[];let c=`import typescript from '@rollup/plugin-typescript';\nimport resolve from "@rollup/plugin-node-resolve";\nimport commonjs from "@rollup/plugin-commonjs";\nimport terser from "@rollup/plugin-terser";\nimport {external} from "./${p}";\n\nexport default [`;const l=r(this.param.input,this.config.format||["js","ts"]),u=Object.keys(l),a=u.length;if(a>0){let r=[i(),e(),s()],p="[resolve(), commonjs(),terser()]";this.config.format.includes("ts")&&(p="[resolve(), commonjs(),typescript({declaration: false, declarationDir: undefined, outDir: undefined}),terser()]",r=[i(),e(),t({declaration:!1,declarationDir:void 0,outDir:void 0}),s()]);for(let t=0;t<a;t++){const i=u[t],e=l[i];let s=n.dirname(n.relative(this.param.input,e));s="."!==s?"/"+s:"";const a=(t,i)=>`\n                    {\n                        input: "${n.relative(process.cwd(),e)}",\n                        output: [\n                        ${t.replace(/\n$/,"").replace(/^,|,$/g,"")}\n                        ],\n                        plugins: ${p},\n                        external: (id) => external(id, "${n.relative(process.cwd(),e)}", "${i}")\n                    },`;if(this.config.dist.es&&(o.push({input:n.relative(process.cwd(),e),output:[{dir:this.config.output+"/"+this.config.dist.es+s,format:"es",exports:"named"}],plugins:r}),c+=a(`{dir: "${this.config.output}/${this.config.dist.es}${s}",format: "es",exports: "named"}`,"es")),this.config.dist.cjs&&(o.push({input:n.relative(process.cwd(),e),output:[{dir:this.config.output+"/"+this.config.dist.cjs+s,format:"cjs",exports:"named"}],plugins:r}),c+=a(`{dir: "${this.config.output}/${this.config.dist.cjs}${s}",format: "cjs",exports: "named"}`,"cjs")),this.config.dist.umd){const t=await import(e),p=Object.keys(t),l=p.length>1||1===p.length&&!p.includes("default")?"named":"default";o.push({input:n.relative(process.cwd(),e),output:[{dir:this.config.output+"/"+this.config.dist.umd+s,format:"umd",name:n.basename(i,".js"),exports:l}],plugins:r}),c+=a(`{dir: "${this.config.output}/${this.config.dist.umd}${s}",format: "umd",name: "${n.basename(i,".js")}",exports: "${l}"}`,"umd")}}}return{string:`${c.replace(/^,|,$/g,"")}\n];`,array:o}},async rollupFile(){const t=await this.rollupConfig();return o.writeFileSync(n.resolve(process.cwd(),"rollup.config.js"),t.string),this},tsconfig(){const t=n.resolve(process.cwd(),"tsconfig.json");let i={};const e="./"+this.config.output+"/"+(this.config.dist.types||"./@types"),s=e.replace(/\/+$/,"")+"/**/*";if(o.existsSync(t)){const n=o.readFileSync(t,"utf-8");i=JSON.parse(n),i.include=i.include||[],i.include.includes(`${this.config.input}/**/*`)||i.include.push(`${this.config.input}/**/*`),i.compilerOptions=i.compilerOptions||{},i.compilerOptions.outDir=e,i.compilerOptions.declarationDir=e,i.compilerOptions.typeRoots=i.compilerOptions.typeRoots||[],i.compilerOptions.typeRoots.includes(e)||i.compilerOptions.typeRoots.push(e),i.include=i.include||[],i.include.includes(s)||i.include.push(s)}else i={compilerOptions:{outDir:e,declaration:!0,declarationDir:e,typeRoots:["./node_modules/@types",e],module:"esnext",target:"es2022",moduleResolution:"node",esModuleInterop:!0,allowJs:!0,emitDeclarationOnly:!0,lib:["es2022","dom"],skipLibCheck:!0,checkJs:!1,jsx:"preserve",noImplicitAny:!1,importHelpers:!0},include:[`${this.config.input}/**/*`,s]};return o.writeFileSync(t,JSON.stringify(i,null,2)),this},package(t={}){if(!1===this.config.package)return this;const i=n.resolve(process.cwd(),"package.json"),e=o.readFileSync(i,"utf-8"),s=JSON.parse(e);s.files=this.config.files,s.type=s.type||"module",s.scripts=s.scripts||{},s.scripts.file="alone-build",s.scripts.build=`rm -rf ./${this.config.output}/ && rollup -c && tsc`,s.scripts.code=`rm -rf ./${this.config.output}/ && rollup -c && javascript-obfuscator ./${this.config.output}/ --output ./build && rm -rf ./${this.config.output}/ && mv ./build ./${this.config.output} && tsc`;const p=r(this.param.input,this.config.format||["js","ts"]),l=Object.keys(p),u=l.length;if(u>0){s.exports={};for(let t=0;t<u;t++){const i=c(l[t]),e={};this.config.dist.es&&(e.import=`./${this.config.output}/${this.config.dist.es}/${i}.js`),this.config.dist.cjs&&(e.require=`./${this.config.output}/${this.config.dist.cjs}/${i}.js`),this.config.dist.umd&&(e.browser=`./${this.config.output}/${this.config.dist.umd}/${i}.js`),this.config.dist.types&&(e.types=`./${this.config.output}/${this.config.dist.types}/${i}.d.ts`),i===this.config.main&&(s.exports["."]=e),s.exports[`./${i}`]=e}}const a={"@rollup/plugin-commonjs":"^28.0.3","@rollup/plugin-node-resolve":"^16.0.1","@rollup/plugin-terser":"^0.4.4","@rollup/plugin-typescript":"^12.1.2","javascript-obfuscator":"^4.1.1",typescript:"^5.8.3",rollup:"^4.40.2",tslib:"^2.8.1"};s.dependencies=s.dependencies||{},s.devDependencies=s.devDependencies||{};for(const t in a)s.dependencies.hasOwnProperty(t)||s.devDependencies.hasOwnProperty(t)||(s.devDependencies[t]=a[t]);return 0===Object.keys(s.dependencies).length&&delete s.dependencies,0===Object.keys(s.devDependencies).length&&delete s.devDependencies,o.writeFileSync(i,JSON.stringify(Object.assign(s,t||{}),null,2)),this},async init(){await this.dealConfig(),!o.existsSync(this.param.input)&&o.mkdirSync(this.param.input,{recursive:!0}),"install"===this.name&&this.mainFile(),!o.existsSync(n.resolve(process.cwd(),p))&&this.aloneConfig(),!o.existsSync(n.resolve(process.cwd(),".gitignore"))&&this.gitIgnore(),this.tsconfig(),this.npmIgnore(),this.package(),await this.rollupFile()}}))("alone.build.js").init()}();export{r as gitDirList};
