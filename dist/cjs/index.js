#!/usr/bin/env node --no-warnings --no-deprecation
"use strict";var i=require("@rollup/plugin-typescript"),t=require("@rollup/plugin-node-resolve"),e=require("@rollup/plugin-commonjs"),s=require("@rollup/plugin-terser"),n=require("path"),o=require("fs");function r(i,t,e=!1,s=i){const c={};if(!o.existsSync(i))return c;const p="string"==typeof t?t.split(","):t||[];return o.readdirSync(i).forEach((l=>{const u=n.join(i,l),a=o.statSync(u);if(a.isDirectory()){const i=r(u,t,e,s);Object.assign(c,i)}else if(a.isFile()){const i=n.extname(l).slice(1),t=0===p.length||p.includes(i);if(e?!t:t){const i=n.relative(s,u);c[i]=u}}})),c}!function(){const c=i=>{const t=n.dirname(i),e=n.basename(i).replace(/\.[^/.]+$/,"");return n.join(t,e)};((p="alone.build.js")=>({name:process.argv[2],config:{input:"src",format:["js","ts"],output:"dist",main:"index",files:["README.md"],dist:{es:"es",cjs:"cjs",umd:"",types:"types"},package:!0},param:{input:"",output:"",main:""},aloneConfig(){const i=n.resolve(process.cwd(),p);if(!o.existsSync(i)){const t='import {builtinModules} from "module";\n\n//判断生成的文件是否是外部依赖,file=文件名,types: "es" | "cjs" | "umd"\nexport const external = (id, file, type) => {\n    if (id.endsWith(file)) return false;\n    if (type === "umd") return false;\n    if (id.startsWith("./") || id.startsWith("../")) return true;\n    if (builtinModules.includes(id)) return true;\n    return /node_modules/.test(id);\n}\n\nexport default {\n    //开发目录\n    input: "src",\n    //开发格式\n    format: ["js", "ts"],\n    //打包目录\n    output: "dist",\n    //默认使用文件名 如 import nameDemo from "name-demo"; 会默认使用什么js\n    main: "index",\n    //上传到npm的目录和文件,默认添加打包目录\n    files: ["README.md", "tsconfig.json","package.json", "dist"],\n    //打包目录设置,为空不打包\n    dist: {es: "es", cjs: "cjs", umd: "", types: "types"},\n    //是否更新package.json\n    package: true\n}';o.writeFileSync(i,t)}return this},async dealConfig(){const i=n.resolve(process.cwd(),p);if(o.existsSync(i)){const t=await import(i)||{};t.default&&"object"==typeof t.default&&Object.assign(this.config,t.default)}return this.param.input=n.resolve(process.cwd(),this.config.input),this.param.output=n.resolve(process.cwd(),this.config.output),this.param.main=n.resolve(this.param.input,this.config.main+".js"),this.config.files=this.config.files||[],this.config.files.includes(this.config.output)||this.config.files.push(this.config.output),this},mainFile(){if(!o.existsSync(this.param.main)){const i=`export default ${JSON.stringify(this.config,null,2)}`;o.writeFileSync(this.param.main,i)}return this},npmIgnore(i=""){return i=`*\n${this.config.files.length>0?"!":""}${this.config.files.join("\n!")}\n${i}`,o.writeFileSync(n.resolve(process.cwd(),".npmignore"),i),this},gitIgnore(i=""){const t=n.resolve(process.cwd(),".gitignore");return i=`.idea\n.vscode\n.DS_Store\nnode_modules\npnpm-lock.yaml\npackage-lock.json\nyarn.lock\nbun.lockb\n${i}`,o.writeFileSync(t,i),this},async rollupConfig(){const o=[];let c=`import typescript from '@rollup/plugin-typescript';\nimport resolve from "@rollup/plugin-node-resolve";\nimport commonjs from "@rollup/plugin-commonjs";\nimport terser from "@rollup/plugin-terser";\nimport {external} from "./${p}";\n\nexport default [`;const l=r(this.param.input,this.config.format||["js","ts"]),u=Object.keys(l),a=u.length;if(a>0)for(let r=0;r<a;r++){const p=u[r],a=l[p];let d=n.dirname(n.relative(this.param.input,a));d="."!==d?"/"+d:"";const f=(i,t)=>`\n                    {\n                        input: "${n.relative(process.cwd(),a)}",\n                        output: [\n                        ${i.replace(/\n$/,"").replace(/^,|,$/g,"")}\n                        ],\n                        plugins: [resolve(), commonjs(), typescript({declaration: false, declarationDir: undefined, outDir: undefined}), terser()],\n                        external: (id) => external(id, "${n.relative(process.cwd(),a)}", "${t}")\n                    },`;if(this.config.dist.es&&(o.push({input:n.relative(process.cwd(),a),output:[{dir:this.config.output+"/"+this.config.dist.es+d,format:"es",exports:"named"}],plugins:[t(),e(),i({declaration:!1,declarationDir:void 0,outDir:void 0}),s()]}),c+=f(`{dir: "${this.config.output}/${this.config.dist.es}${d}",format: "es",exports: "named"}`,"es")),this.config.dist.cjs&&(o.push({input:n.relative(process.cwd(),a),output:[{dir:this.config.output+"/"+this.config.dist.cjs+d,format:"cjs",exports:"named"}],plugins:[t(),e(),i({declaration:!1,declarationDir:void 0,outDir:void 0}),s()]}),c+=f(`{dir: "${this.config.output}/${this.config.dist.cjs}${d}",format: "cjs",exports: "named"}`,"cjs")),this.config.dist.umd){const r=await import(a),l=Object.keys(r),u=l.length>1||1===l.length&&!l.includes("default")?"named":"default";o.push({input:n.relative(process.cwd(),a),output:[{dir:this.config.output+"/"+this.config.dist.umd+d,format:"umd",name:n.basename(p,".js"),exports:u}],plugins:[t(),e(),i({declaration:!1,declarationDir:void 0,outDir:void 0}),s()]}),c+=f(`{dir: "${this.config.output}/${this.config.dist.umd}${d}",format: "umd",name: "${n.basename(p,".js")}",exports: "${u}"}`,"umd")}}return{string:`${c.replace(/^,|,$/g,"")}\n];`,array:o}},async rollupFile(){const i=await this.rollupConfig();return o.writeFileSync(n.resolve(process.cwd(),"rollup.config.js"),i.string),this},tsconfig(){const i=n.resolve(process.cwd(),"tsconfig.json");let t={};const e="./"+this.config.output+"/"+(this.config.dist.types||"./@types"),s=e.replace(/\/+$/,"")+"/**/*";if(o.existsSync(i)){const n=o.readFileSync(i,"utf-8");t=JSON.parse(n),t.include=t.include||[],t.include.includes(`${this.config.input}/**/*`)||t.include.push(`${this.config.input}/**/*`),t.compilerOptions=t.compilerOptions||{},t.compilerOptions.outDir=e,t.compilerOptions.declarationDir=e,t.compilerOptions.typeRoots=t.compilerOptions.typeRoots||[],t.compilerOptions.typeRoots.includes(e)||t.compilerOptions.typeRoots.push(e),t.include=t.include||[],t.include.includes(s)||t.include.push(s)}else t={compilerOptions:{outDir:e,declaration:!0,declarationDir:e,typeRoots:["./node_modules/@types",e],module:"esnext",target:"es2022",moduleResolution:"node",esModuleInterop:!0,allowJs:!0,emitDeclarationOnly:!0,lib:["es2022","dom"],skipLibCheck:!0,checkJs:!1,jsx:"preserve",noImplicitAny:!1,importHelpers:!0},include:[`${this.config.input}/**/*`,s]};return o.writeFileSync(i,JSON.stringify(t,null,2)),this},package(i={}){if(!1===this.config.package)return this;const t=n.resolve(process.cwd(),"package.json"),e=o.readFileSync(t,"utf-8"),s=JSON.parse(e);s.files=this.config.files,s.type=s.type||"module",s.scripts=s.scripts||{},s.scripts.file="alone-build",s.scripts.build=`rm -rf ./${this.config.output}/ && rollup -c && tsc`,s.scripts.code=`rm -rf ./${this.config.output}/ && rollup -c && javascript-obfuscator ./${this.config.output}/ --output ./build && rm -rf ./${this.config.output}/ && mv ./build ./${this.config.output} && tsc`;const p=r(this.param.input,this.config.format||["js","ts"]),l=Object.keys(p),u=l.length;if(u>0){s.exports={};for(let i=0;i<u;i++){const t=c(l[i]),e={};this.config.dist.es&&(e.import=`./${this.config.output}/${this.config.dist.es}/${t}.js`),this.config.dist.cjs&&(e.require=`./${this.config.output}/${this.config.dist.cjs}/${t}.js`),this.config.dist.umd&&(e.browser=`./${this.config.output}/${this.config.dist.umd}/${t}.js`),this.config.dist.types&&(e.types=`./${this.config.output}/${this.config.dist.types}/${t}.d.ts`),t===this.config.main&&(s.exports["."]=e),s.exports[`./${t}`]=e}}const a={"@rollup/plugin-commonjs":"^28.0.3","@rollup/plugin-node-resolve":"^16.0.1","@rollup/plugin-terser":"^0.4.4","@rollup/plugin-typescript":"^12.1.2","javascript-obfuscator":"^4.1.1",typescript:"^5.8.3",rollup:"^4.40.2",tslib:"^2.8.1"};s.dependencies=s.dependencies||{},s.devDependencies=s.devDependencies||{};for(const i in a)s.dependencies.hasOwnProperty(i)||s.devDependencies.hasOwnProperty(i)||(s.devDependencies[i]=a[i]);return 0===Object.keys(s.dependencies).length&&delete s.dependencies,0===Object.keys(s.devDependencies).length&&delete s.devDependencies,o.writeFileSync(t,JSON.stringify(Object.assign(s,i||{}),null,2)),this},async init(){await this.dealConfig(),!o.existsSync(this.param.input)&&o.mkdirSync(this.param.input,{recursive:!0}),"install"===this.name&&this.mainFile(),!o.existsSync(n.resolve(process.cwd(),p))&&this.aloneConfig(),!o.existsSync(n.resolve(process.cwd(),".gitignore"))&&this.gitIgnore(),this.tsconfig(),this.npmIgnore(),this.package(),await this.rollupFile()}}))("alone.build.js").init()}(),exports.gitDirList=r;
